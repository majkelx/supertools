#! /usr/bin/env python
# coding=utf-8
from __future__ import print_function
import re
import sys
from optparse import OptionParser
import superlogs

parser = OptionParser(description='grep-like utility for emci superlogs: filters logrecords in files'
                                  'provided as arguments or in stdin if no files provided',
                      epilog=superlogs.version(),
                      usage='usage: %prog [options] reg-exp [file [file ...]]',
                      version=superlogs.version())
parser.add_option('-v', '--verbose', action='store_true',
                  help='some informative output to stderr')
parser.add_option('-i', '--ignore-case', action='store_true', dest="ignorecase",
                  help='perform case insensitive matching (default: case sensitive)')
(opt, args) = parser.parse_args()
if len(args) < 1:
    parser.error("reg-exp not provided")

files = args[1:]
pattern = re.compile(args[0], flags=re.IGNORECASE if opt.ignorecase else 0)
for f in superlogs.streams(files):
    record = 0
    for r in superlogs.records(f):
        record += 1
        found = pattern.search(r)
        if found:
            if opt.verbose:
                superlogs.info('record %5d in %s' % (record, f.name))
            if sys.version_info < (3,0):
                r = r.encode('utf-8')
            print (r, end='')
